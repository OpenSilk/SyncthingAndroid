/*
 * Copyright (c) 2015 OpenSilk Productions LLC
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'org.robolectric'

// Versioning
def versionMajor = 0
def versionMinor = 1
def versionPatch = 0
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

assert(versionMinor < 100) // Double digits
assert(versionPatch < 100) // Double digits
assert(versionBuild < 100) // Double digits

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "syncthing.android"
        minSdkVersion 16
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionBuild
        versionName String.format("%d.%d.%d", versionMajor, versionMinor, versionPatch)
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix getDebugVersionSuffix()
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false//Lambdas
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    if (file('../../KeyStore').exists()) {
        signingConfigs {
            release {
                def Properties keyProps = new Properties()
                keyProps.load(new FileInputStream(file('../../KeyStore/release-syncthing.properties')))
                storeFile file(keyProps["store"])
                keyAlias keyProps["alias"]
                storePassword keyProps["storePass"]
                keyPassword keyProps["pass"]
            }
        }
        buildTypes.release.signingConfig signingConfigs.release
        signingConfigs {
            debug {
                def Properties keyProps = new Properties()
                keyProps.load(new FileInputStream(file('../../KeyStore/debug2.properties')))
                storeFile file(keyProps["store"])
                keyAlias keyProps["alias"]
                storePassword keyProps["storePass"]
                keyPassword keyProps["pass"]
            }
        }
        buildTypes.debug.signingConfig signingConfigs.debug
        def Properties otherProps = new Properties();
        otherProps.load(new FileInputStream(file('../../KeyStore/syncthing.properties')))
        defaultConfig.buildConfigField "String", "ACRA_REPORTING_URL", otherProps.acraReportingUrl
        defaultConfig.buildConfigField "String", "ACRA_REPORTING_USR", otherProps.acraReportingUsr
        defaultConfig.buildConfigField "String", "ACRA_REPORTING_PASS", otherProps.acraReportingPass
    } else {
        println "No KeyStore directory found! (You can ignore this warning if your name is not drew)"
        defaultConfig.buildConfigField "String", "ACRA_REPORTING_URL", "null"
        defaultConfig.buildConfigField "String", "ACRA_REPORTING_USR", "null"
        defaultConfig.buildConfigField "String", "ACRA_REPORTING_PASS", "null"
    }
}

dependencies {
    //compile fileTree(dir: 'libs', include: ['*.jar'])
    //SDK
    compile 'com.android.support:support-v4:22.0.0'
    compile 'com.android.support:appcompat-v7:22.0.0'
    compile 'com.android.support:cardview-v7:22.0.0'
    compile 'com.android.support:recyclerview-v7:22.0.0'

    compile 'com.jakewharton:butterknife:6.0.0'
    compile 'com.jakewharton.timber:timber:2.5.0'
    //rest api deps
    compile 'io.reactivex:rxandroid:0.23.0'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.okhttp:okhttp:2.2.0'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'joda-time:joda-time:2.7'
    compile 'org.apache.commons:commons-lang3:3.3.2'
    //dagger deps
    compile 'com.google.dagger:dagger:2.0'
    provided 'com.google.dagger:dagger-compiler:2.0'
    provided 'javax.annotation:jsr250-api:1.0'
    //mortar
    compile 'com.squareup.mortar:mortar:0.17-SNAPSHOT'
    //compile 'com.squareup.mortar:dagger2support:0.17-SNAPSHOT'
    //compile 'com.squareup.flow:flow:0.9-SNAPSHOT'

    compile 'commons-io:commons-io:2.4'
    compile 'org.zeroturnaround:zt-zip:1.9-SNAPSHOT'
    //acra
    compile 'ch.acra:acra:4.6.2-SNAPSHOT'

    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:1.10.19"
    testCompile('org.robolectric:robolectric:2.4') {
//        exclude module: 'classworlds'
        exclude module: 'commons-logging'
        exclude module: 'httpclient'
//        exclude module: 'maven-artifact'
//        exclude module: 'maven-artifact-manager'
//        exclude module: 'maven-error-diagnostics'
//        exclude module: 'maven-model'
//        exclude module: 'maven-project'
//        exclude module: 'maven-settings'
//        exclude module: 'plexus-container-default'
//        exclude module: 'plexus-interpolation'
//        exclude module: 'plexus-utils'
//        exclude module: 'wagon-file'
//        exclude module: 'wagon-http-lightweight'
//        exclude module: 'wagon-provider-api'
    }
}

robolectric {
    include '**/*Test.class'
    afterTest {
        descriptor, result -> println "Executing test for ${descriptor.name} with result: ${result.resultType}"
    }
}
